= content_tag :div, class: "question question-#{@question.id}",id: "question-#{@question.id}", data: { question_id: @question.id }
  .row.justisy-content-center
    .col-md-6
      h1.question-title = @question.title
      p.question-body = @question.body
    .col-md-6
      h5.mt-5 Rating:
      = render 'shared/rate', resource: @question

      .question-attachments
        p Attachments:
        ul
          - @question.attachments.each do |a|
            li id="attachment-#{a.id}"
              = link_to a.file.identifier, a.file.url
              br
              - if can?(:destroy, @attachment)
                = link_to 'Delete file', attachment_path(a), method: :delete, remote: true, class: 'btn btn-danger'
  .new-comment-form
    = render 'comments/form', resource: @question

  .question-errors
  .edit-question-form = render 'form'

  - if can?(:update, @question)
    =<> link_to 'Edit', '', class: 'edit-question-link btn btn-info'
  - if can?(:destroy, @question)
    =<> link_to 'Delete question', question_path(@question), method: :delete, class: 'btn btn-info'
  - if can?(:create, Comment)
    =<> link_to 'New comment', '', class: 'new-comment-link btn btn-info', data: { klass: 'Question', id: @question.id }
  - if can?(:create, Subscription)
    - if @question.subscribed?(current_user)
      = link_to 'Unsubscribe', subscription_path(@question.subscriptions.find_by(user: current_user)), class: 'btn btn-danger', method: :delete
    - else
      = link_to 'Subscribe', question_subscriptions_path(@question), class: 'btn btn-success', method: :post

  .row
    .comments.col-12
      h4 Comments:
      = render @question.comments



.row
  .col-md-6
    h2.mt-5 Best Answer
    .best-answer
      = render @question.answers.current_best

    h2.mt-5 Answers
    .answers
      = render @question.answers.not_best

  .col-md-6
    h2.mt-5 New answer
    - if can?(:create, Answer)
      .answer-form
        = render 'answers/form'
    - unless can?(:create, Answer)
      p If you want to add new answer sign in or registr.
